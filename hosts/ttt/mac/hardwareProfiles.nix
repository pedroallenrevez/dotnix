# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  inputs,
  ...
}: {
  imports = [
    # (modulesPath + "/installer/scan/not-detected.nix")
    inputs.nixos-hardware.nixosModules.common-pc-laptop
    #inputs.nixos-hardware.nixosModules.common-gpu-amd
    #inputs.nixos-hardware.nixosModules.common-pc-ssd
    #	inputs.nixos-hardware.nixosModules.common-gpu-amd-southern-islands
    inputs.nixos-hardware.nixosModules.apple-macbook-pro-11-5
  ];

  #boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "sd_mod"];
  #boot.initrd.kernelModules = [];
  #boot.kernelModules = ["kvm-amd"];
  #boot.extraModulePackages = [];
  boot.kernelPackages = pkgs.linuxPackages_latest;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.virbr0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vnet0.useDHCP = lib.mkDefault true;

  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.enableRedistributableFirmware = true;
  hardware.enableAllFirmware = true;

  # =-=-=-=-= BLUETOOTH
  hardware.bluetooth.enable = false;
  services.blueman.enable = false;
  programs.dconf.enable = true;
  #services.dbus.packages = [ pkgs.blueman pkgs.foliate ];

  # =-=-=-=-= PRINTING
  services.printing.enable = false;
  #services.printing.drivers = [ pkgs.brlaser pkgs.mfcl2740dwlpr pkgs.mfcl2740dwcupswrapper ];

  # =-=-=-=-=-=- SOUND
  sound.enable = true;
  hardware.pulseaudio = {
    enable = true;
    daemon.config = {flat-volumes = "no";};
    package = pkgs.pulseaudioFull;
  };
  # =-=-=-=-=-=- VIDEO
  hardware.video.hidpi.enable = lib.mkDefault true;

  # ===========================[TO PORT]==================================
  #fileSystems."/" = {
  #  device = "/dev/disk/by-uuid/6365987d-f4b7-46a3-aa30-3c359bce7c80";
  #  fsType = "ext4";
  #};

  #boot.initrd.luks.devices."luks-b495d38e-c861-49b3-95c4-fab0cee7f093".device = "/dev/disk/by-uuid/b495d38e-c861-49b3-95c4-fab0cee7f093";
  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel" "wl"];
  boot.extraModulePackages = [config.boot.kernelPackages.broadcom_sta];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b8851d47-e693-4db1-b566-976347142471";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-4e0f5b93-07a3-4220-8ec3-2f528e3f9e9f".device = "/dev/disk/by-uuid/4e0f5b93-07a3-4220-8ec3-2f528e3f9e9f";

  swapDevices = [];

  #nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  # high-resolution display
}
