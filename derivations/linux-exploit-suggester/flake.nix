#git revision is b6a730b7edc38be4cd64c948bea88d46c1d5df09
#path is /nix/store/s3q2h7jyypd4rvlx70a0a5007kalg524-linux-exploit-suggester
#git human-readable version is -- none --
#Commit date is 2022-10-04 13:24:04 +0200
#hash is 1chjscdnd3id5c5pl8v3m6g8qaaarb957pa26j1wck0b394gfivy
#{
#  "url": "https://github.com/The-Z-Labs/linux-exploit-suggester",
#  "rev": "b6a730b7edc38be4cd64c948bea88d46c1d5df09",
#  "date": "2022-10-04T13:24:04+02:00",
#  "path": "/nix/store/s3q2h7jyypd4rvlx70a0a5007kalg524-linux-exploit-suggester",
#  "sha256": "1chjscdnd3id5c5pl8v3m6g8qaaarb957pa26j1wck0b394gfivy",
#  "fetchLFS": false,
#  "fetchSubmodules": false,
#  "deepClone": false,
#  "leaveDotGit": false
#}
{
  description = "Package the hello repeater.";
  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = inputs @ {
    self,
    nixpkgs,
    flake-utils,
  }:
    flake-utils.lib.eachDefaultSystem (system: let
      pname = "linux-exploit-suggester";
      pkgs = nixpkgs.legacyPackages.${system};
      app = pkgs.stdenv.mkDerivation {
        name = pname;
        version = "2.11";

        src = pkgs.fetchurl {
          url = "https://github.com/The-Z-Labs/linux-exploit-suggester/archive/refs/tags/v1.1.tar.gz";
          sha256 = "AicC0gXW+Msz/T0Gn0XAxdw3Enn6HMLlL+xPPP/fJdc=";
        };

        #src = pkgs.fetchFromGitHub {
        #    owner = "The-Z-Labs";
        #    repo = "linux-exploit-suggesster";
        #    rev = "b6a730b7edc38be4cd64c948bea88d46c1d5df09";
        #    sha256 = "1chjscdnd3id5c5pl8v3m6g8qaaarb957pa26j1wck0b394gfivy";
        #};
        buildInputs = [pkgs.bash pkgs.makeWrapper];
        phases = ["unpackPhase" "installPhase" "patchPhase" "checkPhase"];
        installPhase = ''
          mkdir -p $out/bin
          cp -r ../$sourceRoot/linux-exploit-suggester.sh  $out/bin/linux-exploit-suggester
          substituteInPlace $out/bin/linux-exploit-suggester --replace '/bin/bash' ${pkgs.bash}/bin/bash
          chmod +x $out/bin/linux-exploit-suggester
        '';
        checkPhase = ''
          $out/bin/linux-exploit-suggester
        '';
      };
    in {
      packages.${pname} = app;
      defaultPackage = self.packages.${system}.${pname}; # <- add this
    });
}
